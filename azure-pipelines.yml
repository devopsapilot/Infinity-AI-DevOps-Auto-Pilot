trigger:
- dev

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '97db9607-4576-409e-8d1a-b73b8ffce00b'
  imageRepository: 'devopsautopilot'
  containerRegistry: 'myreactacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  appName: 'devopsautopilotai'
  resourceGroup: 'devops-auto-pilot'

- group: demo  # Link to the variable group named 'demo'

stages:
- stage: Build
  displayName: Build and Push Stage
  jobs:
    - job: Build
      displayName: Build Job
      pool:
        vmImage: $(vmImageName)
      steps:
        - script: |
            # Write the values from the variable group into the .env.local file
            echo "DATABASE_URL=$(DATABASE_URL)" > $(Build.SourcesDirectory)/.env.local
            echo "NEXT_PUBLIC_API_KEY=$(NEXT_PUBLIC_API_KEY)" >> $(Build.SourcesDirectory)/.env.local
          displayName: 'Write Environment Variables to .env.local'

        - script: |
            # Display the contents of the .env.local file
            cat $(Build.SourcesDirectory)/.env.local
          displayName: 'Display .env File Content'

        - task: Docker@2
          displayName: 'Build and Push Docker Image'
          inputs:
            containerRegistry: $(dockerRegistryServiceConnection)
            repository: $(imageRepository)
            command: buildAndPush
            Dockerfile: $(dockerfilePath)
            tags: $(tag)

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - job: Deploy
      displayName: Deploy Job
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: AzureWebAppContainer@1
          displayName: 'Deploy to Azure App Service'
          inputs:
            azureSubscription: 'Free Trial (90483aec-6f6c-4ac5-95fd-c8bcd9eded29)'  # Azure Service Connection
            appName: $(appName)  # Your App Service name
            resourceGroupName: $(resourceGroup)  # Resource group containing App Service
            imageName: '$(containerRegistry)/$(imageRepository):$(Build.BuildId)'  # Image from ACR with tag
            slotName: 'production'  # Can be changed to another slot (e.g., staging) if needed
